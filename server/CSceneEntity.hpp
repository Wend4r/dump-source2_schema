#pragma once

#include <cstdint>

struct CEntityIOOutput;
// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xa18
// Has VTable
// 
// MNetworkVarNames "bool m_bIsPlayingBack"
// MNetworkVarNames "bool m_bPaused"
// MNetworkVarNames "bool m_bMultiplayer"
// MNetworkVarNames "bool m_bAutogenerated"
// MNetworkVarNames "float32 m_flForceClientTime"
// MNetworkVarNames "CHandle< CBaseFlex > m_hActorList"
// MNetworkVarNames "uint16 m_nSceneStringIndex"
class CSceneEntity : public CPointEntity
{
private:
	[[maybe_unused]] uint8_t __pad04b8[0x8]; // 0x4b8
public:
	CUtlSymbolLarge m_iszSceneFile; // 0x4c0	
	CUtlSymbolLarge m_iszResumeSceneFile; // 0x4c8	
	CUtlSymbolLarge m_iszTarget1; // 0x4d0	
	CUtlSymbolLarge m_iszTarget2; // 0x4d8	
	CUtlSymbolLarge m_iszTarget3; // 0x4e0	
	CUtlSymbolLarge m_iszTarget4; // 0x4e8	
	CUtlSymbolLarge m_iszTarget5; // 0x4f0	
	CUtlSymbolLarge m_iszTarget6; // 0x4f8	
	CUtlSymbolLarge m_iszTarget7; // 0x500	
	CUtlSymbolLarge m_iszTarget8; // 0x508	
	CHandle< CBaseEntity > m_hTarget1; // 0x510	
	CHandle< CBaseEntity > m_hTarget2; // 0x514	
	CHandle< CBaseEntity > m_hTarget3; // 0x518	
	CHandle< CBaseEntity > m_hTarget4; // 0x51c	
	CHandle< CBaseEntity > m_hTarget5; // 0x520	
	CHandle< CBaseEntity > m_hTarget6; // 0x524	
	CHandle< CBaseEntity > m_hTarget7; // 0x528	
	CHandle< CBaseEntity > m_hTarget8; // 0x52c	
	CUtlSymbolLarge m_sTargetAttachment; // 0x530	
	// MNetworkEnable
	bool m_bIsPlayingBack; // 0x538	
	// MNetworkEnable
	bool m_bPaused; // 0x539	
	// MNetworkEnable
	bool m_bMultiplayer; // 0x53a	
	// MNetworkEnable
	bool m_bAutogenerated; // 0x53b	
	// MNetworkEnable
	float m_flForceClientTime; // 0x53c	
	float m_flCurrentTime; // 0x540	
	float m_flFrameTime; // 0x544	
	bool m_bCancelAtNextInterrupt; // 0x548	
private:
	[[maybe_unused]] uint8_t __pad0549[0x3]; // 0x549
public:
	float m_fPitch; // 0x54c	
	bool m_bAutomated; // 0x550	
private:
	[[maybe_unused]] uint8_t __pad0551[0x3]; // 0x551
public:
	int32_t m_nAutomatedAction; // 0x554	
	float m_flAutomationDelay; // 0x558	
	float m_flAutomationTime; // 0x55c	
	CHandle< CBaseEntity > m_hWaitingForThisResumeScene; // 0x560	
	bool m_bWaitingForResumeScene; // 0x564	
	bool m_bPausedViaInput; // 0x565	
	bool m_bPauseAtNextInterrupt; // 0x566	
	bool m_bWaitingForActor; // 0x567	
	bool m_bWaitingForInterrupt; // 0x568	
	bool m_bInterruptedActorsScenes; // 0x569	
	bool m_bBreakOnNonIdle; // 0x56a	
	bool m_bSceneFinished; // 0x56b	
private:
	[[maybe_unused]] uint8_t __pad056c[0x4]; // 0x56c
public:
	// MNetworkEnable
	CNetworkUtlVectorBase< CHandle< CBaseFlex > > m_hActorList; // 0x570	
	CUtlVector< CHandle< CBaseEntity > > m_hRemoveActorList; // 0x588	
private:
	[[maybe_unused]] uint8_t __pad05a0[0x30]; // 0x5a0
public:
	int32_t m_nSceneFlushCounter; // 0x5d0	
	// MNetworkEnable
	uint16_t m_nSceneStringIndex; // 0x5d4	
private:
	[[maybe_unused]] uint8_t __pad05d6[0x2]; // 0x5d6
public:
	CEntityIOOutput m_OnStart; // 0x5d8	
	CEntityIOOutput m_OnCompletion; // 0x600	
	CEntityIOOutput m_OnCanceled; // 0x628	
	CEntityIOOutput m_OnPaused; // 0x650	
	CEntityIOOutput m_OnResumed; // 0x678	
	CEntityIOOutput m_OnTrigger[16]; // 0x6a0	
private:
	[[maybe_unused]] uint8_t __pad0920[0x90]; // 0x920
public:
	CHandle< CSceneEntity > m_hInterruptScene; // 0x9b0	
	int32_t m_nInterruptCount; // 0x9b4	
	bool m_bSceneMissing; // 0x9b8	
	bool m_bInterrupted; // 0x9b9	
	bool m_bCompletedEarly; // 0x9ba	
	bool m_bInterruptSceneFinished; // 0x9bb	
	bool m_bRestoring; // 0x9bc	
private:
	[[maybe_unused]] uint8_t __pad09bd[0x3]; // 0x9bd
public:
	CUtlVector< CHandle< CSceneEntity > > m_hNotifySceneCompletion; // 0x9c0	
	CUtlVector< CHandle< CSceneListManager > > m_hListManagers; // 0x9d8	
	CUtlSymbolLarge m_iszSoundName; // 0x9f0	
	CUtlSymbolLarge m_iszSequenceName; // 0x9f8	
	CHandle< CBaseFlex > m_hActor; // 0xa00	
	CHandle< CBaseEntity > m_hActivator; // 0xa04	
	int32_t m_BusyActor; // 0xa08	
	SceneOnPlayerDeath_t m_iPlayerDeathBehavior; // 0xa0c	
	
	// Static fields:
	static int32_t &Get_s_nSceneFlushCounter(){return *reinterpret_cast<int32_t*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CSceneEntity")->m_static_fields[0]->m_instance);};
	
	// Datamap fields:
	// void m_pScene; // 0x5c8
	// void m_pRecipientFilter; // 0xa10
	// void InputStartPlayback; // 0x0
	// void InputPausePlayback; // 0x0
	// void InputResumePlayback; // 0x0
	// void InputCancelPlayback; // 0x0
	// void InputCancelAtNextInterrupt; // 0x0
	// float InputPitchShiftPlayback; // 0x0
	// CUtlSymbolLarge InputInterjectResponse; // 0x0
	// void InputStopWaitingForActor; // 0x0
	// int32_t InputTriggerEvent; // 0x0
	// CUtlSymbolLarge InputSetTarget1; // 0x0
	// CUtlSymbolLarge InputSetTarget2; // 0x0
	// void InputScriptPlayerDeath; // 0x0
	// void InputPauseAtNextInterrupt; // 0x0
	// void m_OnTrigger[ 0 ]; // 0x6a0
	// void m_OnTrigger[ 1 ]; // 0x6c8
	// void m_OnTrigger[ 2 ]; // 0x6f0
	// void m_OnTrigger[ 3 ]; // 0x718
	// void m_OnTrigger[ 4 ]; // 0x740
	// void m_OnTrigger[ 5 ]; // 0x768
	// void m_OnTrigger[ 6 ]; // 0x790
	// void m_OnTrigger[ 7 ]; // 0x7b8
	// void m_OnTrigger[ 8 ]; // 0x7e0
	// void m_OnTrigger[ 9 ]; // 0x808
	// void m_OnTrigger[ 10 ]; // 0x830
	// void m_OnTrigger[ 11 ]; // 0x858
	// void m_OnTrigger[ 12 ]; // 0x880
	// void m_OnTrigger[ 13 ]; // 0x8a8
	// void m_OnTrigger[ 14 ]; // 0x8d0
	// void m_OnTrigger[ 15 ]; // 0x8f8
};

