#pragma once

#include <cstdint>

// Registered binary: client.dll (project 'client')
// Alignment: 8
// Size: 0x5a8
// Has VTable
// 
// MNetworkVarNames "bool m_bIsPlayingBack"
// MNetworkVarNames "bool m_bPaused"
// MNetworkVarNames "bool m_bMultiplayer"
// MNetworkVarNames "bool m_bAutogenerated"
// MNetworkVarNames "float32 m_flForceClientTime"
// MNetworkVarNames "uint16 m_nSceneStringIndex"
// MNetworkVarNames "CHandle< C_BaseFlex > m_hActorList"
class C_SceneEntity : public C_PointEntity
{
private:
	[[maybe_unused]] uint8_t __pad0548[0x8]; // 0x548
public:
	// MNetworkEnable
	bool m_bIsPlayingBack; // 0x550	
	// MNetworkEnable
	bool m_bPaused; // 0x551	
	// MNetworkEnable
	bool m_bMultiplayer; // 0x552	
	// MNetworkEnable
	bool m_bAutogenerated; // 0x553	
	// MNetworkEnable
	// MNetworkChangeCallback "OnResetClientTime"
	float m_flForceClientTime; // 0x554	
	// MNetworkEnable
	// MNetworkPriority "32"
	uint16_t m_nSceneStringIndex; // 0x558	
	bool m_bClientOnly; // 0x55a	
private:
	[[maybe_unused]] uint8_t __pad055b[0x1]; // 0x55b
public:
	CHandle< C_BaseFlex > m_hOwner; // 0x55c	
	// MNetworkEnable
	// MNetworkPriority "32"
	C_NetworkUtlVectorBase< CHandle< C_BaseFlex > > m_hActorList; // 0x560	
	bool m_bWasPlaying; // 0x578	
private:
	[[maybe_unused]] uint8_t __pad0579[0xf]; // 0x579
public:
	CUtlVector< C_SceneEntity::QueuedEvents_t > m_QueuedEvents; // 0x588	
	float m_flCurrentTime; // 0x5a0	
};

